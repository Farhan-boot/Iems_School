@using EMS.DataAccess.Data
@using EMS.Framework.Utils
@model List<EMS.DataAccess.Data.Aca_Class>

@{
    ViewBag.Title = "Offered Courses";
    var depts = Model.Select(x => x.HR_Department).Distinct();
    var campusList = HttpUtil.DbContext.General_Campus.ToList();
    var editClassByIdPageUrl = Url.Action("ClassAddEdit", "ClassManager", new { area = "Academic" });
}

@foreach (var dept in depts)
{
    <h2 class="text-center">Offered Courses for @Model.First().Aca_Semester.Name</h2>
    <h4 class="text-center">@dept.Name (@dept.ShortName)</h4>
    var levels = Model.Where(x => x.DepartmentId == dept.Id)
        .Select(x => x.Aca_StudyLevelTerm.Aca_StudyLevel).Distinct();
    foreach (var level in levels)
    {
        <table class="table table-bordered">
            <tr>
                <th class="text-center" colspan="7">@level.Name</th>
            </tr>
            <tr>
                <th class="text-center">Course Name</th>
                <th class="text-center" style="width: 250px;">Faculty</th>
                <th class="text-center" style="width: 75px;">Student Capacity</th>
                <th class="text-center" style="width: 88px;">Status</th>
            </tr>
            @foreach (var course in Model.Where(x => x.DepartmentId == dept.Id
            && x.Aca_StudyLevelTerm.Aca_StudyLevel.Id == level.Id))
            {
                <tr>
                    <td>
                        <a target="_blank" href="@(editClassByIdPageUrl)/?id=@course.Id">
                            @course.Code @course.Name
                        </a><br />
                        <span  class="badge badge-info">Class No: @course.ClassNo</span>
                        <span  class="badge badge-info">Section: @course.Aca_ClassSection.Name</span>
                        <span  class="badge badge-success">Cr.Hr: @course.Aca_CurriculumCourse.CreditLoad.ToString("F")</span>
                        <span  class="badge badge-info">@course.Aca_CurriculumCourse.CourseCategory</span>
                        <span  class="badge badge-success">Co.Hr: @course.Aca_CurriculumCourse.CreditHour.ToString("F")</span>
                    </td>
                    <td>
                        @{ var facultyList = HttpUtil.DbContext.Aca_ClassTakenByEmployee
                                        .Include("User_Employee")
                                        .Include("User_Employee.User_Account")
                                        .Where(x => x.ClassId == course.Id
                                        && x.RoleEnumId == (byte)Aca_ClassTakenByEmployee.RoleEnum.Faculty)
                                        .Select(x=>x.User_Employee.User_Account)
                                        .ToList(); }
                        <ul class="list-inline">
                            @foreach (var faculty in facultyList)
                            {
                                <li><a href="#">@faculty.FullName</a></li>
                            }
                        </ul>
                    </td>
                    <td class="text-center">
                        <span  class="badge badge-success">@HttpUtil.DbContext.Aca_ClassTakenByStudent.Count(x => x.ClassId == course.Id && x.EnrollTypeEnumId == (byte)Aca_ClassTakenByStudent.EnrollTypeEnum.Regular)/@course.RegularCapacity</span>
                    </td>
                    <td class="text-center">@course.Status</td>
                </tr>
            }
        </table>
    }
    <hr class="pb-after"/>
}