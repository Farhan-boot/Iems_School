@using System.Linq
@using EMS.CoreLibrary
@using EMS.DataAccess.Data
@using EMS.Framework.Permissions
@using EMS.Framework.Utils
@model EMS.Web.UI.Areas.Admin.Models.UserModel
@{
    ViewBag.Title = "User Update";
    var successMessage = ViewBag.SuccessMessage ?? string.Empty;
    var errorMessage = ViewBag.ErrorMessage ?? string.Empty;
    var newPassword = ViewBag.NewPassword ?? string.Empty;
    IQueryable<UAC_Role> rolesQuery = HttpUtil.DbContext.UAC_Role;
    var userRoles = HttpUtil.DbContext.UAC_RoleUserMap.Where(ur => ur.UserId == Model.UserId).ToList();
    if (!HttpUtil.IsSupperAdmin())
    {
        rolesQuery = rolesQuery.Where(x => x.Id != HttpUtil.SuperAdminId);
    }

    var roles = rolesQuery.ToList();

    var canEdit = "disabled=''";
}

@using (Html.BeginForm("Update", "User", FormMethod.Post))
{
    if (EMS.CoreLibrary.Helpers.ValidationHelper.IsValid(newPassword.ToString()))
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close"  data-dismiss="alert" aria-label="Close"><span  aria-hidden="true">&times;</span></button>
            Your New Password is @newPassword
        </div>
    }
    else if (EMS.CoreLibrary.Helpers.ValidationHelper.IsValid(successMessage))
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span  aria-hidden="true">&times;</span></button>
            @successMessage
        </div>
    }
    else if (EMS.CoreLibrary.Helpers.ValidationHelper.IsValid(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span  aria-hidden="true">&times;</span></button>
            @errorMessage
        </div>
    }

    <div role="tabpanel">
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#detail" aria-controls="Category" role="tab" data-toggle="tab">User Details</a></li>
            @if (Model.UserId != -1)
            {
                <li role="presentation"><a href="#credential" aria-controls="settings" role="tab" data-toggle="tab">User Credential</a></li>
                <li role="presentation"><a href="#role" aria-controls="settings" role="tab" data-toggle="tab">User In Role</a></li>
            }
        </ul>
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade in active" id="detail">
                <div class="row form-group" style="margin-top: 10px">
                    <div class="col-md-4">

                        @if (PermissionUtil.HasPermission(PermissionCollection.AdminArea.UserCredential.UserAccess.CanEdit) || PermissionUtil.HasPermission(PermissionCollection.AdminArea.UserCredential.UserAccess.CanAdd) || HttpUtil.IsSupperAdmin())
                        {
                            canEdit = "";

                           <button type="submit" name="command" value="Save" class="btn btn-success"><i class="fa fa-save"></i>Save</button>
                        }
                        @if (PermissionUtil.HasPermission(PermissionCollection.AdminArea.UserCredential.UserAccess.CanAdd) || HttpUtil.IsSupperAdmin())
                        {
                            if (Model.UserId != -1)
                            {
                                <a href="@Url.Action("Update", "User", new {area = "Admin", id = "-1"})" class="btn btn-success">
                                    <i class="fa fa-plus"></i>&nbsp;New
                                </a>
                            }
                        }
                      
                    </div>
                </div>
                <table class="table">
                    <tr>
                        <td style="width: 10%">
                            @Html.LabelFor(m => m.FullName)
                        </td>
                        <td style="width: 2%">:</td>
                        <td>
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @style = "width:50%" })
                            @Html.ValidationMessageFor(m => m.FullName)
                            @Html.HiddenFor(m => m.UserId)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.UserName)
                        </td>
                        <td>:</td>
                        <td>
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @style = "width:50%" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </td>
                    </tr>
                </table>
            </div>
            @if (Model.UserId != -1)
            {
                <div role="tabpanel" class="tab-pane fade" id="credential">
                    <table class="table">
                        <tr>
                            <td style="width: 20%">
                                @Html.LabelFor(m => m.LastLoginDate)
                            </td>
                            <td style="width: 2%">:</td>
                            <td>
                                @Html.LabelForModel(Model.LastLoginDate)
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 20%">
                                @Html.CheckBoxFor(m => m.IsApproved, new { @disabled = "disabled" })
                                @Html.LabelFor(m => m.IsApproved)
                            </td>
                            <td style="width: 2%">:</td>
                            <td>
                                <button type="submit" name="command" value="Approve/Disapprove" class="btn btn-primary">
                                    @if (Model.IsApproved)
                                    {
                                        <span >Disapprove</span>
                                    }
                                    else
                                    {
                                        <span >Approve</span>
                                    }
                                </button>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 20%">
                                @Html.CheckBoxFor(m => m.IsLockedOut, new { @disabled = "disabled" })
                                @Html.LabelFor(m => m.IsLockedOut)
                            </td>
                            <td style="width: 2%">:</td>
                            <td>
                                <button type="submit" name="command" value="Lock/Unlock" class="btn btn-primary">
                                    @if (Model.IsLockedOut)
                                    {
                                        <span >Unlock</span>
                                    }
                                    else
                                    {
                                        <span >Lock</span>
                                    }
                                </button>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 20%">
                                @Html.LabelFor(m => m.LastPasswordChangedDate)
                            </td>
                            <td style="width: 2%">:</td>
                            <td>
                                @Html.LabelForModel(Model.LastPasswordChangedDate)
                                <button type="submit" name="command" value="Reset" class="btn btn-default">
                                    Reset Password
                                </button>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 20%">
                                @Html.LabelFor(m => m.FailedPasswordAttemptCount)
                            </td>
                            <td style="width: 2%">:</td>
                            <td>
                                @Html.TextBoxFor(m => m.FailedPasswordAttemptCount, new { @style = "width:15%", @disabled = "disabled" })
                                <button type="submit" name="command" value="FailedPasswordAttemptCount" class="btn btn-default">
                                    Set To Zero
                                </button>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 20%">
                                @Html.LabelFor(m => m.FailedPasswordAnswerAttemptCount)
                            </td>
                            <td style="width: 2%">:</td>
                            <td>
                                @Html.TextBoxFor(m => m.FailedPasswordAnswerAttemptCount, new { @style = "width:15%", @disabled = "disabled" })
                                <button type="submit" name="command" value="FailedPasswordAnswerAttemptCount" class="btn btn-default">
                                    Set To Zero
                                </button>
                            </td>
                        </tr>
                    </table>
                </div>
                
                
                <div role="tabpanel" class="tab-pane fade" id="role">
                    <div class="row form-group" style="margin-top: 10px">
                        <div class="col-md-12">
                            @if (PermissionUtil.HasPermission(PermissionCollection.AdminArea.UserCredential.UserAccess.CanManageRole))
                            {
                                <button type="submit" name="command" value="UserRole" class="btn btn-success"><i class="fa fa-save"></i>Save Role</button>
                            }
                          
                        </div>
                    </div>
                    <table class="table table-striped">
                        @foreach (var role in roles)
                        {
                            <tr>
                                <td>
                                    <div class="checkbox">
                                        <input checked="@userRoles.Any(rp => rp.RoleId == role.Id)" type="checkbox" name="roles" value="@role.Id" /> @role.Name
                                        
                                    </div>
                                </td>
                                <td><input type="text" class="date-picker" datetime="dd/MM/yyyy" placeholder="Expire Date"  style="padding-left: 4px;"/></td>
                            </tr>
                        }
                    </table>
                </div>
            }
        </div>
    </div>


}

