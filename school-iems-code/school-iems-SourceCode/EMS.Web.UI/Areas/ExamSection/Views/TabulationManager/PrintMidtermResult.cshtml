@using EMS.CoreLibrary.Helpers
@using EMS.DataAccess.Data
@using EMS.Framework.Settings
@using EMS.Framework.Utils
@using EMS.Web.Jsons.Custom.Academic.ResultModel
@using EMS.Web.UI.Areas.ExamSection.Controllers
@model  List<EMS.Web.UI.Areas.ExamSection.Controllers.TabulationManagerController.ResultPublish>

@{
    ViewBag.Title = "Print Tabulation";
    Layout = null;
    List<TabulationManagerController.ResultPublish> ResultPublishList = Model;
    //List<User_Student> studentList = ViewBag.StudentList;
    //List<Aca_CurriculumCourse> courseList = ViewBag.CourseList;

    Int64 SemesterId = HttpUtil.GetQueryString("SemesterId").ToInt64();
    Int64 departmentId = HttpUtil.GetQueryString("departmentId").ToInt64(); ;
    Int64 campusId = HttpUtil.GetQueryString("campusId").ToInt64(); ;
    Int64 programTypeEnumId = HttpUtil.GetQueryString("programTypeEnumId").ToInt64(); ;
    Int64 curriculumId = HttpUtil.GetQueryString("curriculumId").ToInt64(); ;
    Int64 examId = HttpUtil.GetQueryString("examId").ToInt64();


    int? stdPerPageTmp = ViewBag.StdPerPage;
    int stdPerPage = 31;
    if (stdPerPageTmp != null && stdPerPageTmp >0)
    {
        stdPerPage =(int) stdPerPageTmp;
    }

    var viewTabulationUrl = Url.Action("PrintTabulationSheet", "TabulationManager", new { area = "Academic" });

    var query = string.Format("?SemesterId={0}&departmentId={1}&campusId={2}&programTypeEnumId={3}&curriculumId={4}&examId={5}&stdPerPage={6}", SemesterId, departmentId, campusId, programTypeEnumId, curriculumId, examId, stdPerPage);
}


<style>
                                .print-mark-sheet td {
                                    border: 1px solid black !important;
                                    font-size: 12px;
                                }
                                @*("@page") {size: 22in 18in;margin: 1cm }
                                @("@page") :first {margin-top: 0/* Top margin on first page 10cm */}
                                @("@page") { size: portrait }
                                @("@page") { size: landscape }
                                @("@page") rotated { size: landscape }*@

</style>
<html>
<!--//system error
@ViewBag.Error
-->

<head>

    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Tabulation Print</title>

    <link href="~/assets/custom/css/print.css" rel="stylesheet"/>
    <script src="~/assets/js/jquery.min.js"></script>
    <script src="~/assets/custom/lib/TableExport/tableExport.js?v=1"></script>
</head>
@*width: 22in;height:18in*@
<body style="" bgcolor="#FFFFFF" text="#000000" link="#CC0000" vlink="#CC0000" alink="#CC0000" leftmargin="5" topmargin="5" marginheight="0" marginwidth="0" onresize="if (navigator.family == 'nn4') window.location.reload()">

<!--div class="no-print" style="width: 550px; left: 40%; text-align: center; position: fixed; top: 0px">
    <div id="settings" style="background-color: whitesmoke; display: none; border: 1px solid gray; padding: 3px">
        Student Per Page: <input type="number" id="stdCount" style="width: 50px" value="@stdPerPage"/> <button onclick="reload()">Reload</button>
    </div>
    <center>
        <button onclick="$('#settings').slideToggle();" class="">Page Setting</button> <button onclick="window.print();" class="">Print</button>
        @*Download As:
        <button href="#" onclick="$('#tabulation').tableExport({ fileName: 'StudentMarks', type: 'xls', worksheetName: 'Worksheet', escape: 'false' });"><i class="fa fa-file-excel-o"></i> As Excel (.xls)</button>
        <button href="#" onclick="$('#tabulation').tableExport({ fileName: 'StudentMarks', type: 'doc', escape: 'false' });"><i class="fa fa-file-word-o"></i> As Word (.doc)</button>
        <button href="#" onclick="$('#tabulation').tableExport({ fileName: 'StudentMarks', type: 'csv', escape: 'false' });"><i class="fa fa-file-excel-o"></i> As CSV (.csv)</button>*@

    </center>
</div>-->
<div   id="tabulation">
    <table style="width: 100%">

        <thead>
            <tr >
                <td align="left" valign="top" style="width: 33%">

                    <img style="width: 100px" src="@(EMS.Framework.Settings.SiteSettings.Instance.InstituteLogoBlackWhiteSolo)" />
                </td>
                <td style="width: 33%">
                    <div class="margin-bottom-5" style="text-align: center">
                        <h3 style="margin: 0;">@EMS.Framework.Settings.SiteSettings.Instance.InstituteName</h3>
                        <h4 style="margin: 0;">@EMS.Framework.Settings.SiteSettings.Instance.InstituteAddress</h4>
                        <div class="text-bold">
                            Midterm Result Sheet 
                        </div>
                        
                     
                    </div>


                </td>
                <td style="width: 33%"></td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan="3" style="width: 100%">
                    @{

                        //var firstPage = 9;

                        //var taken = 0;

                        if (ResultPublishList != null && ResultPublishList.Count > 0)
                        {

                            foreach (var resultPublish in ResultPublishList)
                            {

                                


                                //start Paging Course in column
                                int itemPerPage = 16;
                                var firstPage = 9;
                                var startIndex = 0;
                                var taken = 0;
                                var totalStudent = resultPublish.CourseList.Count;
                                var totalPage = (int)Math.Ceiling((double)totalStudent / itemPerPage); //(totalStudent + stdPerPage - 1) / stdPerPage;//

                                for (int i = 1; i <= totalPage; i++)
                                {
                                    var pagedCourse
                                        = resultPublish.CourseList.Skip(taken).Take(itemPerPage).ToList();
                                    if (pagedCourse == null || pagedCourse.Count <= 0)
                                    { break; }

                                    @GenerateTabulationView(resultPublish, pagedCourse, 0, 0)

                                    @*for (int j = startIndex; j < pagedCourse.Count; j++)
                                        {
                                            if (j < pagedCourse.Count)
                                            {
                                            @*<span> @pagedCourse[j].Code </span>*@
                                    //}
                                    //else
                                    //{
                                    //    { break; }
                                    //}*@


                                    <br />
                                    @*if (i != totalPage)
                                        {<p style="page-break-before: always">&nbsp;</p>}*@
                                taken += itemPerPage;
                            }





                        }
                    }
                    }
                </td>
            </tr>
            <!-- Table Footer -->
        </tbody>
        <tfoot>
            <tr>
                <td rowspan="2" style="width: 33%; vertical-align: bottom; text-align: left;">
                    Developed By: @SiteSettings.PoweredBy
                    
                </td>
                <td style="vertical-align: bottom; text-align: center;">
                    ____________________________________<br />
                    Controller of Examinations
                </td>
                <td style="width: 33%; vertical-align: bottom; text-align: right;">
                    @SiteSettings.Instance.InstituteCreditPrefix @SiteSettings.Instance.InstituteCredit
                </td>
           
            </tr>
        </tfoot>



    </table>
</div>




<!-- School Titile -->
@helper GenerateTabulationView(TabulationManagerController.ResultPublish resultPublish,List<Aca_CurriculumCourse> courseList, int totalPage1, int pageNo)
{


                <!-- Batch wise result Start -->
                @*@Html.Partial("~/Areas/ExamSection/Views/TabulationManager/_PrintMidtermResult.cshtml", resultPublish)*@
                <table border="1" cellpadding="5" cellspacing="0" bordercolor="#000000" style="border-collapse: collapse;"  id="AutoNumber1" bordercolordark="#666666" bordercolorlight="#999999">
                    <!-- Colum Titles -->

                    <thead>
                        <tr bgcolor="#e2e2e2" align="center">
                            <td colspan="@(resultPublish.CourseList.Count + 2)" face="Arial, Arial, Helvetica" size="2">
                                <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse;" width="100%">
                                    <tr>
                                        <td align="left" valign="top" style="width: 33%">

                                            <strong>Program: @resultPublish.ProgramName</strong>
                                        </td>
                                        <td align="center" style="width: 33%">
                                            
                                            <span>Batch: @resultPublish.Batch.Name</span>
                                       
                                        </td>
                                        <td align="right" style="width: 33%"><span>Semester & Year: @resultPublish.SemesterName</span></td>
                                    </tr>
                                </table>

                            </td>
                        </tr>
                        <tr bgcolor="#e2e2e2" align="center">


                            <td><font face="Arial, Arial, Helvetica" size="2">Student ID</font></td>

                            <td><font face="Arial, Arial, Helvetica" size="2">Student Name </font></td>

                            @{
                                if (resultPublish != null && resultPublish.CourseList.Count > 0)
                                {
                                    foreach (var course in resultPublish.CourseList)
                                    {
                                        if (courseList.Any(x => x.Id == course.Id))
                                        {
                                            <td><font face="Arial, Arial, Helvetica" size="2">@course.Code</font></td>
                                        }



                                    }
                                }

                            }
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Student List Contents -->

                        @{
                            if (resultPublish != null && resultPublish.StudentList.Count > 0)
                            {
                                foreach (var std in resultPublish.StudentList)
                                {

                                    <tr align="center">

                                        <td><font face="Arial, Arial, Helvetica" size="2">@std.ClassRollNo</font></td>
                                        <td align="left"><font face="Arial, Arial, Helvetica" size="2"> @std.FullName.ToLower().ToTitleCase()</font></td>
                                        @{
                                            var regYear = "";
                                            if (std.ClassRollNo.ToString().Length >= 4)
                                            {
                                                regYear = std.ClassRollNo.ToString().Substring(0, 4);
                                            }
                                        }

                                        @*Course Result Start*@

                                        @{
                                            //if (courseList != null && courseList.Count > 0)
                                            List<CourseResult> courseResultList = std.DataBag.CourseResults;
                                            if (courseResultList != null && courseResultList.Count > 0)
                                            {
                                                foreach (var course in courseResultList)
                                                {

                                                    if (courseList.Any(x => x.Id.ToString() == course.Id))
                                                    {
                                                        <td align="center" style="background-color:@course.Color"><font face="Arial, Arial, Helvetica" size="2" style="" color="">&nbsp;@course.GradePoint</font></td>
                                                    }

                                                }
                                            }
                                        }


                                    </tr>

                                                }
                                            }}

                        @*Student Info Ind*@

                    </tbody>
                </table>
                <!-- Batch wise result End -->
                <br>

     


}

<script type="text/javascript">
    function reload() {
        var stdCount = document.getElementById("stdCount").value;

        var url = "@viewTabulationUrl" + "@Html.Raw(string.Format("/?SemesterId={0}&departmentId={1}&campusId={2}&programTypeEnumId={3}&curriculumId={4}&examId={5}", SemesterId, departmentId, campusId, programTypeEnumId, curriculumId, examId))" + "&stdPerPage=" + stdCount;
        //alert(url);
        //window.open(url);
        window.location = url;
    }

</script>





</body>
</html>
