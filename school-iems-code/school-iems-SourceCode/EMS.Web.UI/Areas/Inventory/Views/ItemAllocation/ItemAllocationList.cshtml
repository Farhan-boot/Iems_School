
<!--File:Inv_ItemAllocation List View-->
@using EMS.DataAccess.Data;
@{
    ViewBag.Title = "Inventory: Item Allocation List";
    Layout = "~/Areas/Inventory/Views/Shared/_LayoutInventory.cshtml";
    
    // Angular Properties
    var id = Request.QueryString["id"];//ViewContext.RouteData.Values["id"];
    var ItemAllocationId = (string) id == null?"0":(string)id;
    
    //WebApi link for single row 
    var getItemAllocationByIdUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "GetItemAllocationById", area = "Inventory" });
    var getItemAllocationDataExtraUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "GetItemAllocationDataExtra", area = "Inventory" });
    var saveItemAllocationUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "SaveItemAllocation", area = "Inventory" });
    var deleteItemAllocationByIdUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "GetDeleteItemAllocationById", area = "Inventory" });

    //WebApi link for List
    var getPagedItemAllocationUrl = Url.HttpRouteUrl("DefaultApi", new {controller = "ItemAllocationApi", action = "GetPagedItemAllocation", area = "Inventory"});
    var getAllItemAllocationUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "GetAllItemAllocation", area = "Inventory" });
    var saveItemAllocationListUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "SaveItemAllocationList", area = "Inventory" });
    var getItemAllocationListDataExtraUrl = Url.HttpRouteUrl("DefaultApi", new { controller = "ItemAllocationApi", action = "GetItemAllocationListDataExtra", area = "Inventory" });

    var editItemAllocationByIdPageUrl = Url.Action("ItemAllocationAddEdit", "ItemAllocation", new { area = "Inventory" });

    //Angular Function Name
    var getNewItemAllocation = "getNewItemAllocation";
    var saveItemAllocation = "saveItemAllocation";
    var deleteItemAllocationById = "deleteItemAllocationById";
    var deleteItemAllocationByObj = "deleteItemAllocationByObj";
    //for list
    var searchItemAllocationList = "searchItemAllocationList";
    var getPagedItemAllocationList = "getPagedItemAllocationList";
    var getAllItemAllocationList = "getAllItemAllocationList";
    var saveItemAllocationList = "saveItemAllocationList";
    var getItemAllocationListExtraData = "getItemAllocationListExtraData";

    var refreshPage = "loadPage()";
    
}
@section ScriptSection
{
    <script src="~/Areas/Inventory/Views/ItemAllocation/ItemAllocationList.js"></script>
}


<div ng-controller="ItemAllocationListCtrl"
     ng-init="Init(
      '@getPagedItemAllocationUrl'
     ,'@deleteItemAllocationByIdUrl'
     ,'@getItemAllocationListDataExtraUrl'
     ,'@saveItemAllocationListUrl'
     ,'@getItemAllocationByIdUrl'
     ,'@getItemAllocationDataExtraUrl'
     ,'@saveItemAllocationUrl'
     )">
     <div ng-Hide="!HasError ||ErrorMsg==''" class="alert alert-danger fade in radius-bordered alert-shadowed">
            <button ng-click="HasError=false" class="close" data-dismiss1="alert">×</button>
            <i class="fa-fw fa fa-warning"></i>
            <strong>Attention Please!</strong> {{ErrorMsg}}
     </div>
    <div class="widget" ng-show="HasViewPermission">

        <div class="widget-header bordered-bottom bordered-sky ">
            <i class="widget-icon fa fa-list bold  "></i>
            <span class="widget-caption ">Manage Item Allocation </span>
              <div class="widget-buttons buttons-bordered no-padding-right" style="display:none">
                <span class="widget-caption form-inline">
                    @*<span>Select Id</span>*@
                     <select ng-model="SelectedId" ng-change="@(searchItemAllocationList)()" 
                        ng-options="option.Id as option.Name for option in ItemAllocationList " ng-init="" class="form-control input-xs ">
                        <option value="" label="" class="">---Select All Id---</option>
                     </select>
                </span>
              </div>       
            <div class="widget-buttons buttons-bordered no-padding-right">
                <span class="input-icon">
                    <input type="text" ng-model="SearchText" ng-Enter="@(searchItemAllocationList)()" class="form-control input-xs " id="glyphicon-search" placeholder="Search" style="">
                    <i class="glyphicon glyphicon-search blue"></i>
                </span>
            </div>
            <div class="widget-buttons no-padding-left">
                <a target="_blank" href="@editItemAllocationByIdPageUrl?id=0" class="btn btn-xs btn-success"><i class="fa fa-plus"></i> Add New</a>
                <button ng-click="@(searchItemAllocationList)()" class="btn btn-info btn-xs"><i class="fa fa-refresh"></i> Refresh</button>
            </div>
        </div>
        <div class="widget-body no-padding"  style="overflow:auto">
            <div class="table-footer no-print">
                @OptionControl()
            </div>
            <table class="table table-striped table-bordered table-hover">
                <thead class="bordered-blue">
                <tr>
                    <th class="text-center" style="display:none">
                        <input type="checkbox" ng-click="selectAll($event)">
                    </th>
                    <th class="text-center">SN</th>
                    <th class="text-center">Item Id</th>
                    <th class="text-center">From Store</th>
                    <th class="text-center">Allocated To</th>
                    <th class="text-center">Allocation Date</th>
                    <th class="text-center">Allocation Status</th>
                    <th class="text-center">Reference By</th>
                    <th class="text-center">Remarks</th>
                    @*<th class="text-center">Is Deleted</th>*@
                    <th class="text-center no-print">Action</th>
                </tr>
                </thead>
                <tbody>
    
                <tr ng-repeat="row in ItemAllocationList">
                    <td class="text-center" style="display:none">
                        <input type="checkbox" ng-model="row.@Inv_ItemAllocation.Property_IsSelected" /> 
                    </td>
                    <td class="text-center">{{$index+1}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_ItemId}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_FromStore}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_AllocatedTo}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_AllocationDate}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_AllocationStatus}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_ReferenceBy}}</td>
                    <td class="">{{row.@Inv_ItemAllocation.Property_Remarks}}</td>
                    @*<td class="">{{row.@Inv_ItemAllocation.Property_IsDeleted}}</td>*@
                    <td class="text-center no-print">
                        <a target="_blank" href="@(editItemAllocationByIdPageUrl)/?id={{row.Id}}" class="btn btn-xs btn-primary"><i class="fa fa-edit"></i> Edit</a>
                        <button ng-click="@(deleteItemAllocationById)(row)" class="btn btn-xs btn-danger"><i class="fa fa-trash"></i></button>
                     
                    </td>
                </tr>
                </tbody>
            </table>
            <div class="table-footer no-print">
                @OptionControl()
            </div>
        </div>
    </div>
</div>

@helper  OptionControl()
{
    <div class="row no-print">
        <div class="col-sm-12">
            <div class="form-inline pull-left">
                <div class="form-group">
                    <label ng-hide="totalServerItems==0">Showing {{totalServerItems*(PageNo-1)+1}} to {{totalServerItems*PageNo}} of {{totalItems}} </label>
                    <label ng-show="totalServerItems==0" class="text-danger">No Data Found!</label>
                </div>
            </div>
            <div class="form-inline pull-right">
                <div class="form-group">
                    <label>Page Size</label>
                    <input ng-model="PageSize" ng-enter="changePageSize()" class="form-control input-opt" autocomplete="on" placeholder="Page Size" type="number" min="1">
                </div>
                <div class="form-group">
                    <label>Page No.</label>
                    <input ng-model="PageNo" ng-enter="changePageNo()" class="form-control input-opt" autocomplete="on" placeholder="Page No" type="number" min="1">
                    <label>of {{totalItems/PageSize| number:0}}</label>
                </div>
                <div class="form-group">
                    <button ng-click="prev()" ng-hide="totalItems == 0 || PageNo <= 1" class="btn btn-info btn-opt" type="button"><i class="fa fa-angle-double-left"></i>Previous&nbsp;</button>
                    <button ng-click="next()" ng-hide="totalItems == 0 || PageNo >= totalPage" class="btn btn-info btn-opt" type="button">&nbsp;Next&nbsp;<i class="fa fa-angle-double-right"></i></button>
                </div>
            </div>
        </div>
    </div>
}



