@using EMS.CoreLibrary.Helpers
@model List<EMS.DataAccess.Data.Aca_ClassAttendance>
@if (Model.Count == 0)
{
    <div class="alert alert-danger fade in radius-bordered alert-shadowed">
        <i class="fa-fw fa fa-times"></i>
        <strong>Not Found!</strong> There is no class Attendance in this Course.
    </div>
}
else
{
    <table class="table table-striped table-bordered">
        <tr>
            <th class="text-center" style="width: 82px;">Date</th>
            <th class="text-center" style="width: 92px;">Day</th>
            <th class="text-center" style="width: 144px;">Class Time</th>
            <th class="text-center">Type</th>
            <th class="text-center" style="width: 66px;">Status</th>
            <th class="text-center">Absent Reason</th>
            <th class="text-center" style="width: 46px;">Late</th>
            <th class="text-center" style="width: 50px;">Early Left</th>
            <th class="text-center">Faculty Name</th>
        </tr>
        @foreach (var attendance in Model)
        {
            <tr>
                <td class="text-center">@attendance.StartTime.ToString("dd/MM/yyyy")</td>
                <td class="text-center">@attendance.StartTime.ToString("dddd")</td>
                <td class="text-center">@attendance.StartTime.ToString("hh:mm tt") - @attendance.EndTime.ToString("hh:mm tt")</td>
                <td class="text-center">
                    @attendance.Aca_ClassAttendanceSetting.ClassType.ToString().AddSpacesToSentence()
                </td>
                <td class="text-center">
                    @if (attendance.IsAbsent)
                    {
                        <span  class="badge badge-danger">Absent</span>
                    }
                    else
                    {
                        <span  class="badge badge-success">Present</span>
                    }
                </td>
                <td class="text-center">
                    @if (attendance.ReasonEnumId != null)
                    {
                        <span >@attendance.Reason</span>
                    }
                    else
                    {
                        <span >N/A</span>
                    }
                </td>
                <td class="text-center">
                    @if (attendance.IsLate)
                    {
                        <span  class="badge badge-danger">Yes</span>
                    }
                    else
                    {
                        <span  class="badge badge-success">No</span>
                    }
                </td>
                <td class="text-center">
                    @if (attendance.IsLeftEarly)
                    {
                        <span  class="badge badge-danger">Yes</span>
                    }
                    else
                    {
                        <span  class="badge badge-success">No</span>
                    }
                </td>
                <td class="">
                    @attendance.EmployeeName
                </td>
            </tr>
        }
        @{
            var totalDays = Model.Count();
            var totalPresent = Model.Count(x => x.IsAbsent == false);
            var totalAbsent = Model.Count(x => x.IsAbsent);
            var totalPercentage = Convert.ToDouble(totalPresent) / Convert.ToDouble(totalDays);
            totalPercentage = totalPercentage * 100;
        }
        <tr>
            <th colspan="3" class="text-center" style="width: 82px;">
                Total Class: @totalDays
            </th>
            <th colspan="2" class="text-center">
                Total Present: @totalPresent
            </th>
            <th colspan="2" class="text-center">
                Total Absent: @totalAbsent
            </th>
            <th colspan="2" class="text-center">
                Total Percentage: @totalPercentage.ToString("F")
            </th>
        </tr>
    </table>
}