@using EMS.Framework.Utils
@model EMS.Web.UI.Areas.Academic.Models.ClassTestMarksViewModel

@{
    ViewBag.Title = "Class Test Marks";
    var index = 0;
}
@if (@Model == null)
{
    <div class="alert alert-danger fade in radius-bordered alert-shadowed">
        <i class="fa-fw fa fa-times"></i>
        <strong>Attention!</strong> ViewBag.Error.
    </div>
}
else
{

    <h4 class="text-center text-uppercase">Department of @Model.Course.HR_Department.Name (@Model.Course.HR_Department.ShortName)</h4>
    <h4 class="text-center text-uppercase">@Model.Course.Aca_Semester.Name</h4>
    <h3 class="text-center text-uppercase margin-10"><u>Class Test Marks</u></h3>
    <h4 class="text-center text-uppercase">Course: @Model.Course.Code @Model.Course.Name</h4>
    <h6 class="text-center">
        Cr.Hr: @Model.Course.Aca_CurriculumCourse.CreditLoad.ToString("F"), Co.Hr: @Model.Course.Aca_CurriculumCourse.CreditHour.ToString("F"), @Model.Course.Aca_CurriculumCourse.CourseCategory, @Model.Course.Aca_CurriculumCourse.CourseType, @Model.Course.Aca_CurriculumCourse.Aca_Curriculum.ShortName
    </h6>
    <h5 class="text-center text-uppercase">
        Faculty:
        @if (Model.ClassFacultyList == null)
        {
            <span class="badge badge-danger graded">Not Available</span>
        }
        else
        {
            <ul class="no-margin list-unstyled list-inline" style="display: inline;">
                @foreach (var classTakenByEmployee in Model.ClassFacultyList)
                {
                    <li>@classTakenByEmployee.User_Employee.User_Account.FullName [@classTakenByEmployee.User_Employee.User_Account.UserName]</li>
                }
            </ul>
        }
    </h5>
    if (Model.ResultComponentBreakdownSettingList == null)
    {
        <div class="alert alert-danger fade in radius-bordered alert-shadowed">
            <i class="fa-fw fa fa-times"></i>
            <strong>Not Found!</strong> There is no Result in this Course.
        </div>
    }
    else
    {
        <table class="table table-striped table-bordered">
            <tr>
                <th colspan="3" class="text-right" style="vertical-align: middle;">Total Mark</th>
                @foreach (var resultComponentBreakdownSetting in Model.ResultComponentBreakdownSettingList)
                {
                    <th class="text-center">
                        @resultComponentBreakdownSetting.TotalMark
                    </th>
                }
                <th class="text-center" style="vertical-align: middle;">@Model.ResultComponentSetting.TotalMark</th>
            </tr>
            <tr>
                <th colspan="3" class="text-right" style="vertical-align: middle;">Contributed %</th>
                @foreach (var resultComponentBreakdownSetting in Model.ResultComponentBreakdownSettingList)
                {
                    <th class="text-center">
                        @resultComponentBreakdownSetting.ConvertPercentage%
                    </th>
                }
                <th class="text-center" style="vertical-align: middle;">@Model.ResultComponentSetting.ConvertPercentage%</th>
            </tr>
            <tr>
                <th class="text-center" style="width: 35px; vertical-align: bottom;">SL</th>
                <th class="text-center" style="width: 80px; vertical-align: bottom;">Class Roll</th>
                <th class="text-center" style="vertical-align: bottom;">Student Name</th>
                @foreach (var resultComponentBreakdownSetting in Model.ResultComponentBreakdownSettingList)
                {
                    <th class="text-center">
                        @resultComponentBreakdownSetting.Name
                    </th>
                }
                <th class="text-center" style="vertical-align: middle;">Best @Model.ResultComponentSetting.BestCount</th>
            </tr>

            @foreach (var student in Model.ClassStudentList)
            {
                index++;
                <tr>
                    <td class="text-center" style="vertical-align: middle;">@index</td>
                    <td class="text-center" style="vertical-align: middle;">@student.User_Student.ClassRollNo</td>
                    <td class="text-left" style="vertical-align: middle;">@student.User_Student.FullName</td>
                    @foreach (var resultComponentBreakdownSetting in Model.ResultComponentBreakdownSettingList)
                    {
                        var resultComponentBreakdown = Model.ResultComponentBreakdownList
                            .SingleOrDefault(
                                x => x.ResultBreakdownSettingId == resultComponentBreakdownSetting.Id
                                     && x.StudentId == student.StudentId
                            );
                        if (resultComponentBreakdown != null)
                        {
                            <td class="text-center" style="vertical-align: middle;">
                                @resultComponentBreakdown.Mark.ToString("F")
                            </td>
                        }
                        else
                        {
                            <td class="text-center" style="vertical-align: middle;">&nbsp;</td>
                        }
                    }
                    @if (Model.ResultComponentList != null && Model.ResultComponentList.Count > 0)
                    {
                        <th class="text-center" style="vertical-align: middle;">
                            @{
                                var res = Model.ResultComponentList.SingleOrDefault(x => x.StudentId == student.User_Student.Id);
                                if (res != null)
                                {
                                    <span>@res.Mark.ToString("F")</span>
                                }
                            }
                        </th>
                                }
                                else
                                {
                                    <th class="text-center" style="vertical-align: middle;">&nbsp;</th>
                                }
                </tr>
                                }
        </table>
                                }

                                }