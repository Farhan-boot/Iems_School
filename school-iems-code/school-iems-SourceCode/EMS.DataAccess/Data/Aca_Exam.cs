//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS.DataAccess.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class Aca_Exam
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Aca_Exam()
        {
            this.Aca_ExamRoll = new HashSet<Aca_ExamRoll>();
            this.Aca_ExamSupple = new HashSet<Aca_ExamSupple>();
        }
    
        public long Id { get; set; }
        public string Name { get; set; }
        public string ShortName { get; set; }
        public string AcademicSession { get; set; }
        public long SemesterId { get; set; }
        public byte ProgramTypeEnumId { get; set; }
        public byte ExamTypeEnumId { get; set; }
        public System.DateTime StartDateOfTermFinalExam { get; set; }
        public System.DateTime EndDateOfTermFinalExam { get; set; }
        public System.DateTime DateOfTermFinalResultPublication { get; set; }
        public string Remarks { get; set; }
        public System.DateTime CreateDate { get; set; }
        public long CreateById { get; set; }
        public System.DateTime LastChanged { get; set; }
        public long LastChangedById { get; set; }
        public bool IsDeleted { get; set; }
        public string History { get; set; }
        public string OfficialExamName { get; set; }
        public Nullable<System.DateTime> StartDateOfMidtermExam { get; set; }
        public Nullable<System.DateTime> EndDateOfMidtermExam { get; set; }
        public Nullable<System.DateTime> DateOfMidtermResultPublication { get; set; }
        public bool IsPublishTheoryContinuousAssessmentMarks { get; set; }
        public bool IsPublishNonTheoryContinuousAssessmentMarks { get; set; }
        public float ContinuousAssessmentMarksAllowedPaymentDueUpto { get; set; }
        public bool IsPublishTheoryMidtermResult { get; set; }
        public bool IsPublishNonTheoryMidtermResult { get; set; }
        public float MidtermResultAllowedPaymentDueUpto { get; set; }
        public bool IsPublishTheoryFinalTermResult { get; set; }
        public bool IsPublishNonTheoryFinalTermResult { get; set; }
        public float FinalTermResultAllowedPaymentDueUpto { get; set; }
        public bool IsPublishedMidtermAdmitCard { get; set; }
        public float MidtermAdmitCardDownloadPaymentDueUpto { get; set; }
        public bool IsPublishedFinalTermAdmitCard { get; set; }
        public float FinalTermAdmitCardDownloadPaymentDueUpto { get; set; }
        public bool IsOpenTheoryContinuousAssessmentMarkInput { get; set; }
        public bool IsOpenNonTheoryContinuousAssessmentMarkInput { get; set; }
        public bool IsOpenTheoryMidTermMarkInput { get; set; }
        public bool IsOpenNonTheoryMidTermMarkInput { get; set; }
        public bool IsOpenTheoryFinalTermMarkInput { get; set; }
        public bool IsOpenNonTheoryFinalTermMarkInput { get; set; }
        public float AutoGradeGraceMark { get; set; }
        public long AbsentGradeId { get; set; }
        public string AbsentMarkSymbol { get; set; }
        public long ContinuationGradeId { get; set; }
        public long MaximumImproveExamAllowGradeId { get; set; }
        public long MaximumRetakeCourseAllowGradeId { get; set; }
        public long MaximumGradeForImproveExamGradeId { get; set; }
        public long MaximummGradeForRetakeCourseGradeId { get; set; }
    
        public virtual Aca_GradingPolicyOption Aca_GradingPolicyOption { get; set; }
        public virtual Aca_GradingPolicyOption Aca_GradingPolicyOption1 { get; set; }
        public virtual Aca_GradingPolicyOption Aca_GradingPolicyOption2 { get; set; }
        public virtual Aca_GradingPolicyOption Aca_GradingPolicyOption3 { get; set; }
        public virtual Aca_GradingPolicyOption Aca_GradingPolicyOption4 { get; set; }
        public virtual Aca_GradingPolicyOption Aca_GradingPolicyOption5 { get; set; }
        public virtual Aca_Semester Aca_Semester { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Aca_ExamRoll> Aca_ExamRoll { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Aca_ExamSupple> Aca_ExamSupple { get; set; }
    }
}
